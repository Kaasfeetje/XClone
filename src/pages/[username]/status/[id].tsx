import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect } from "react";
import { useInView } from "react-intersection-observer";
import Menu from "~/components/Menu/Menu";
import DetailedPost from "~/components/Post/DetailedPost";
import PostType from "~/components/Post/Post";
import CommentForm from "~/components/common/CommentForm";
import Layout from "~/components/common/Layout";
import BackHeader from "~/components/headers/BackHeader";
import { api } from "~/utils/api";

type Props = Record<string, string>;

const PostPage = (props: Props) => {
  const router = useRouter();
  const { id: postId } = router.query;
  const post = api.post.fetch.useQuery(
    { postId: postId as string },
    { enabled: postId != undefined },
  );
  const comments = api.post.fetchComments.useInfiniteQuery(
    { postId: postId as string },
    {
      enabled: postId != undefined,
      getNextPageParam: (lastPage) => lastPage.nextCursor,
    },
  );
  const { ref, inView } = useInView();

  useEffect(() => {
    if (inView) {
      if (comments.hasNextPage && !comments.isLoading) {
        comments.fetchNextPage().then();
      }
    }
  }, [inView, comments.hasNextPage, comments.isLoading, comments.fetchStatus]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout
        menu={<Menu />}
        main={
          <div className="h-full">
            <BackHeader>
              <div className="text-xl font-semibold">Post</div>
            </BackHeader>
            {post.data ? (
              <>
                <DetailedPost post={post.data} />
                <div className="hidden px-4 md:block">
                  <CommentForm comment={post.data} />
                </div>
              </>
            ) : (
              <div>Loading...</div>
            )}
            <div>
              {comments.data?.pages.map((page, idx) => (
                <div key={page.comments[0]?.id}>
                  {page.comments.map((post) => (
                    <PostType key={post.id} post={post} />
                  ))}
                </div>
              ))}
              {comments.hasNextPage && <div ref={ref}>Loading...</div>}
            </div>
          </div>
        }
        sidebar={
          <div>
            <div className="h-screen w-full">Recommended</div>
            <div className="sticky top-0 h-screen w-full bg-blue-200">
              TRENDS
            </div>
          </div>
        }
      />
    </>
  );
};

export default PostPage;
