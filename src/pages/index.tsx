import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import Menu from "~/components/Menu/Menu";
import MobileActions from "~/components/MobileActions";
import IconButton from "~/components/common/IconButton";
import MainHeader from "~/components/headers/MainHeader/MainHeader";
import CreateTweetIcon from "~/components/icons/CreateTweetIcon";

import { api } from "~/utils/api";

export default function Home() {
  const hello = api.post.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="text-normal w-full lg:flex lg:justify-center">
        <div className="pointer-events-none fixed top-0 z-10 w-full max-w-[1310px]">
          <Menu />
        </div>
        <main className="relative z-0 flex w-full justify-end  lg:ml-[80px] lg:max-w-[1310px]">
          <div className="flex w-full md:w-[920px] md:justify-between  lg:w-[1050px]">
            <div className="w-full md:w-[600px]">
              <MainHeader />
              <div className="h-screen w-full bg-blue-200">main content</div>
              <div className="h-screen w-full">main content</div>
              <div className="h-screen w-full bg-blue-200">main content</div>
              <div className="h-screen w-full">main content</div>
            </div>
            <div className="hidden md:block md:w-[290px] lg:ml-[25px] lg:mr-[75px] lg:w-[350px]">
              <div className="h-screen w-full">Recommended</div>
              <div className="sticky top-0 h-screen w-full bg-blue-200">
                TRENDS
              </div>
            </div>
          </div>
          <MobileActions />
          
        </main>
      </div>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
